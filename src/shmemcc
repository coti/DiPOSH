#!/usr/bin/perl

use strict;
use warnings;

use Cwd;
use Cwd "abs_path";
use File::Basename;

my $num_args = $#ARGV + 1;
if ($num_args < 2) {
    print "No input file provided\n";
    exit;
}

my $skip = 0;
my @input_files = ();
my $output_exec="";
my $libraries = "";
my $includepaths = "";
my $c = "";
my $l = "";
my $no_static = 0;
my $options = "";
my $cur_dir = getcwd;

#my $libs="-L. -lshmem -lboost_system";
my $libs="-L. -lshmem -lboost_system -lboost_mpi";
#my $CXX="g++";
my $CXX="mpic++";
my $dir = getcwd;
my $abs_path = dirname( abs_path($0) );
my $s2sc = $abs_path . "/shmem_s2sc";

# parse args and delete -o <output>
# and all the options
foreach my $arg(@ARGV){
    if( $arg eq '-o' ) {
	# skip this one and tell myself I will need to skip the following one
	$skip = 1;
    } else {
	if( $arg eq "--no-static" ){
	    $no_static = 1;
	} else {
	    $c = substr( $arg, 0, 1 );
	    if( $c eq '-' ) {
		$l = substr( $arg, 0, 2 );
		if( $l eq "-L" || $l eq "-l" ) {
		    $libraries = $libraries . " " . $arg;
		} else {
		    if( $l eq "-I" ) {
			$includepaths = $includepaths . " " . $arg;
		    } else {
			$options = $options . " " . $arg;
		    }
		}
		;;
	    } else {
		if( $skip == 0 ) {
		    # is it a static lib?
		    my $end = substr( $arg, -2 );
		    print $end;
		    if( $end eq ".a" ) {
			$libraries = $arg . " " . $libraries;
		    } else {
			# No, this is a real input file.
			@input_files = (@input_files, $arg);
		    }
		} else {
		    # skip this one too
		    $output_exec=$arg;
		    $skip = 0;
		}
	    }
	}
    }

}

my $filename;
my $command = "";
my $inputfilelist = "";
$includepaths = $includepaths . " -I" . $cur_dir;

if( $no_static == 0 ) {
    foreach my $f( @input_files ) {
	$filename = $f;
	$filename =~ s/\//_/g;
	$command = $s2sc . " " . $f . " > /tmp/" . $filename;
	system( $command );
	$inputfilelist =  $inputfilelist . " /tmp/" . $filename;
    } 
} else {
    foreach my $f( @input_files ) {
	$inputfilelist =  $inputfilelist . $f;
    }
}

my $cmdline=$CXX . $options . " " . $includepaths . " -o " . $output_exec . " " . $inputfilelist . " " . $libs . " " . $libraries;
print $cmdline . "\n";

system( $cmdline );

my $rc = $?;
#exit $rc;

if( $no_static == 0 ) {
    foreach my $f( @input_files ) {
	$filename = $f;
	$filename =~ s/\//_/g;
	$command = "rm /tmp/" . $filename;
	system( $command );
    }
}


exit $rc;
