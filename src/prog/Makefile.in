# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# -*- Makefile -*-
#
# Copyright 2011 Sandia Corporation. Under the terms of Contract
# DE-AC04-94AL85000 with Sandia Corporation, the U.S.  Government
# retains certain rights in this software.
# 
# This file is part of the Portals SHMEM software package. For license
# information, see the LICENSE file in the top level directory of the
# distribution.
#
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = hello$(EXEEXT) circular_shift$(EXEEXT) \
	accessible_ping$(EXEEXT) max_reduction$(EXEEXT) \
	big_reduction$(EXEEXT) strided_put$(EXEEXT) barrier$(EXEEXT) \
	put1$(EXEEXT) get1$(EXEEXT) swap1$(EXEEXT) ping$(EXEEXT) \
	pingpong$(EXEEXT) shmalloc$(EXEEXT) shrealloc$(EXEEXT) \
	shmemalign$(EXEEXT) get_g$(EXEEXT) iput32$(EXEEXT) \
	iput64$(EXEEXT) iput128$(EXEEXT) iput_short$(EXEEXT) \
	iput_double$(EXEEXT) iput_float$(EXEEXT) iput_long$(EXEEXT) \
	iput_longdouble$(EXEEXT) iput_longlong$(EXEEXT) sping$(EXEEXT) \
	pingpong-short$(EXEEXT) ipgm$(EXEEXT) iput-iget$(EXEEXT) \
	swapm$(EXEEXT) cswap$(EXEEXT) waituntil$(EXEEXT) \
	atomic_inc$(EXEEXT) set_lock$(EXEEXT) test_lock$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_1) shmemlatency$(EXEEXT) \
	msgrate$(EXEEXT) NPshmem$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/ompi_check_package.m4 \
	$(top_srcdir)/config/ompi_check_portals4.m4 \
	$(top_srcdir)/config/ompi_check_withdir.m4 \
	$(top_srcdir)/config/orte_check_pmi.m4 \
	$(top_srcdir)/config/shmem_check_type.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = hello$(EXEEXT) circular_shift$(EXEEXT) \
	accessible_ping$(EXEEXT) max_reduction$(EXEEXT) \
	big_reduction$(EXEEXT) strided_put$(EXEEXT) barrier$(EXEEXT) \
	put1$(EXEEXT) get1$(EXEEXT) swap1$(EXEEXT) ping$(EXEEXT) \
	pingpong$(EXEEXT) shmalloc$(EXEEXT) shrealloc$(EXEEXT) \
	shmemalign$(EXEEXT) get_g$(EXEEXT) iput32$(EXEEXT) \
	iput64$(EXEEXT) iput128$(EXEEXT) iput_short$(EXEEXT) \
	iput_double$(EXEEXT) iput_float$(EXEEXT) iput_long$(EXEEXT) \
	iput_longdouble$(EXEEXT) iput_longlong$(EXEEXT) sping$(EXEEXT) \
	pingpong-short$(EXEEXT) ipgm$(EXEEXT) iput-iget$(EXEEXT) \
	swapm$(EXEEXT) cswap$(EXEEXT) waituntil$(EXEEXT) \
	atomic_inc$(EXEEXT) set_lock$(EXEEXT) test_lock$(EXEEXT)
am__dirstamp = $(am__leading_dot)dirstamp
am_NPshmem_OBJECTS = netpipe/NPshmem-netpipe.$(OBJEXT) \
	netpipe/NPshmem-shmem.$(OBJEXT)
NPshmem_OBJECTS = $(am_NPshmem_OBJECTS)
NPshmem_DEPENDENCIES = $(top_builddir)/src/libsma.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am_accessible_ping_OBJECTS = accessible_ping.$(OBJEXT)
accessible_ping_OBJECTS = $(am_accessible_ping_OBJECTS)
accessible_ping_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_atomic_inc_OBJECTS = atomic_inc.$(OBJEXT)
atomic_inc_OBJECTS = $(am_atomic_inc_OBJECTS)
atomic_inc_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_barrier_OBJECTS = barrier.$(OBJEXT)
barrier_OBJECTS = $(am_barrier_OBJECTS)
barrier_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_big_reduction_OBJECTS = big_reduction.$(OBJEXT)
big_reduction_OBJECTS = $(am_big_reduction_OBJECTS)
big_reduction_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_circular_shift_OBJECTS = circular_shift.$(OBJEXT)
circular_shift_OBJECTS = $(am_circular_shift_OBJECTS)
circular_shift_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_cswap_OBJECTS = cswap.$(OBJEXT)
cswap_OBJECTS = $(am_cswap_OBJECTS)
cswap_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_get1_OBJECTS = get1.$(OBJEXT)
get1_OBJECTS = $(am_get1_OBJECTS)
get1_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_get_g_OBJECTS = get_g.$(OBJEXT)
get_g_OBJECTS = $(am_get_g_OBJECTS)
get_g_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_hello_OBJECTS = hello.$(OBJEXT)
hello_OBJECTS = $(am_hello_OBJECTS)
hello_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_ipgm_OBJECTS = ipgm.$(OBJEXT)
ipgm_OBJECTS = $(am_ipgm_OBJECTS)
ipgm_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_iput_iget_OBJECTS = iput-iget.$(OBJEXT)
iput_iget_OBJECTS = $(am_iput_iget_OBJECTS)
iput_iget_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_iput128_OBJECTS = iput128.$(OBJEXT)
iput128_OBJECTS = $(am_iput128_OBJECTS)
iput128_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_iput32_OBJECTS = iput32.$(OBJEXT)
iput32_OBJECTS = $(am_iput32_OBJECTS)
iput32_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_iput64_OBJECTS = iput64.$(OBJEXT)
iput64_OBJECTS = $(am_iput64_OBJECTS)
iput64_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_iput_double_OBJECTS = iput_double.$(OBJEXT)
iput_double_OBJECTS = $(am_iput_double_OBJECTS)
iput_double_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_iput_float_OBJECTS = iput_float.$(OBJEXT)
iput_float_OBJECTS = $(am_iput_float_OBJECTS)
iput_float_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_iput_long_OBJECTS = iput_long.$(OBJEXT)
iput_long_OBJECTS = $(am_iput_long_OBJECTS)
iput_long_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_iput_longdouble_OBJECTS = iput_longdouble.$(OBJEXT)
iput_longdouble_OBJECTS = $(am_iput_longdouble_OBJECTS)
iput_longdouble_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_iput_longlong_OBJECTS = iput_longlong.$(OBJEXT)
iput_longlong_OBJECTS = $(am_iput_longlong_OBJECTS)
iput_longlong_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_iput_short_OBJECTS = iput_short.$(OBJEXT)
iput_short_OBJECTS = $(am_iput_short_OBJECTS)
iput_short_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_max_reduction_OBJECTS = max_reduction.$(OBJEXT)
max_reduction_OBJECTS = $(am_max_reduction_OBJECTS)
max_reduction_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_msgrate_OBJECTS = msgrate.$(OBJEXT)
msgrate_OBJECTS = $(am_msgrate_OBJECTS)
msgrate_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_ping_OBJECTS = ping.$(OBJEXT)
ping_OBJECTS = $(am_ping_OBJECTS)
ping_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_pingpong_OBJECTS = pingpong.$(OBJEXT)
pingpong_OBJECTS = $(am_pingpong_OBJECTS)
pingpong_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_pingpong_short_OBJECTS = pingpong-short.$(OBJEXT)
pingpong_short_OBJECTS = $(am_pingpong_short_OBJECTS)
pingpong_short_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_put1_OBJECTS = put1.$(OBJEXT)
put1_OBJECTS = $(am_put1_OBJECTS)
put1_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_set_lock_OBJECTS = set_lock.$(OBJEXT)
set_lock_OBJECTS = $(am_set_lock_OBJECTS)
set_lock_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_shmalloc_OBJECTS = shmalloc.$(OBJEXT)
shmalloc_OBJECTS = $(am_shmalloc_OBJECTS)
shmalloc_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_shmemalign_OBJECTS = shmemalign.$(OBJEXT)
shmemalign_OBJECTS = $(am_shmemalign_OBJECTS)
shmemalign_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_shmemlatency_OBJECTS = shmemlatency.$(OBJEXT)
shmemlatency_OBJECTS = $(am_shmemlatency_OBJECTS)
shmemlatency_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_shrealloc_OBJECTS = shrealloc.$(OBJEXT)
shrealloc_OBJECTS = $(am_shrealloc_OBJECTS)
shrealloc_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_sping_OBJECTS = sping.$(OBJEXT)
sping_OBJECTS = $(am_sping_OBJECTS)
sping_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_strided_put_OBJECTS = strided_put.$(OBJEXT)
strided_put_OBJECTS = $(am_strided_put_OBJECTS)
strided_put_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_swap1_OBJECTS = swap1.$(OBJEXT)
swap1_OBJECTS = $(am_swap1_OBJECTS)
swap1_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_swapm_OBJECTS = swapm.$(OBJEXT)
swapm_OBJECTS = $(am_swapm_OBJECTS)
swapm_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_test_lock_OBJECTS = test_lock.$(OBJEXT)
test_lock_OBJECTS = $(am_test_lock_OBJECTS)
test_lock_DEPENDENCIES = $(top_builddir)/src/libsma.la
am_waituntil_OBJECTS = waituntil.$(OBJEXT)
waituntil_OBJECTS = $(am_waituntil_OBJECTS)
waituntil_DEPENDENCIES = $(top_builddir)/src/libsma.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(NPshmem_SOURCES) $(accessible_ping_SOURCES) \
	$(atomic_inc_SOURCES) $(barrier_SOURCES) \
	$(big_reduction_SOURCES) $(circular_shift_SOURCES) \
	$(cswap_SOURCES) $(get1_SOURCES) $(get_g_SOURCES) \
	$(hello_SOURCES) $(ipgm_SOURCES) $(iput_iget_SOURCES) \
	$(iput128_SOURCES) $(iput32_SOURCES) $(iput64_SOURCES) \
	$(iput_double_SOURCES) $(iput_float_SOURCES) \
	$(iput_long_SOURCES) $(iput_longdouble_SOURCES) \
	$(iput_longlong_SOURCES) $(iput_short_SOURCES) \
	$(max_reduction_SOURCES) $(msgrate_SOURCES) $(ping_SOURCES) \
	$(pingpong_SOURCES) $(pingpong_short_SOURCES) $(put1_SOURCES) \
	$(set_lock_SOURCES) $(shmalloc_SOURCES) $(shmemalign_SOURCES) \
	$(shmemlatency_SOURCES) $(shrealloc_SOURCES) $(sping_SOURCES) \
	$(strided_put_SOURCES) $(swap1_SOURCES) $(swapm_SOURCES) \
	$(test_lock_SOURCES) $(waituntil_SOURCES)
DIST_SOURCES = $(NPshmem_SOURCES) $(accessible_ping_SOURCES) \
	$(atomic_inc_SOURCES) $(barrier_SOURCES) \
	$(big_reduction_SOURCES) $(circular_shift_SOURCES) \
	$(cswap_SOURCES) $(get1_SOURCES) $(get_g_SOURCES) \
	$(hello_SOURCES) $(ipgm_SOURCES) $(iput_iget_SOURCES) \
	$(iput128_SOURCES) $(iput32_SOURCES) $(iput64_SOURCES) \
	$(iput_double_SOURCES) $(iput_float_SOURCES) \
	$(iput_long_SOURCES) $(iput_longdouble_SOURCES) \
	$(iput_longlong_SOURCES) $(iput_short_SOURCES) \
	$(max_reduction_SOURCES) $(msgrate_SOURCES) $(ping_SOURCES) \
	$(pingpong_SOURCES) $(pingpong_short_SOURCES) $(put1_SOURCES) \
	$(set_lock_SOURCES) $(shmalloc_SOURCES) $(shmemalign_SOURCES) \
	$(shmemlatency_SOURCES) $(shrealloc_SOURCES) $(sping_SOURCES) \
	$(strided_put_SOURCES) $(swap1_SOURCES) $(swapm_SOURCES) \
	$(test_lock_SOURCES) $(waituntil_SOURCES)
ETAGS = etags
CTAGS = ctags
# If stdout is a non-dumb tty, use colors.  If test -t is not supported,
# then this fails; a conservative approach.  Of course do not redirect
# stdout here, just stderr.
am__tty_colors = \
red=; grn=; lgn=; blu=; std=; \
test "X$(AM_COLOR_TESTS)" != Xno \
&& test "X$$TERM" != Xdumb \
&& { test "X$(AM_COLOR_TESTS)" = Xalways || test -t 1 2>/dev/null; } \
&& { \
  red='[0;31m'; \
  grn='[0;32m'; \
  lgn='[1;32m'; \
  blu='[1;34m'; \
  std='[m'; \
}
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLEANFILES = @CLEANFILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
@WANT_MPI_RUNTIME_TRUE@TESTS_ENVIRONMENT = mpirun -hostfile $(HOSTFILE) -np $(PROCS)
@WANT_PMI_RUNTIME_TRUE@TESTS_ENVIRONMENT = srun -n $(PROCS)
@WANT_PORTALS_SHMEM_RUNTIME_TRUE@TESTS_ENVIRONMENT = yod -c $(PROCS)
hello_SOURCES = hello.c
hello_LDADD = $(top_builddir)/src/libsma.la
circular_shift_SOURCES = circular_shift.c
circular_shift_LDADD = $(top_builddir)/src/libsma.la
accessible_ping_SOURCES = accessible_ping.c
accessible_ping_LDADD = $(top_builddir)/src/libsma.la
max_reduction_SOURCES = max_reduction.c
max_reduction_LDADD = $(top_builddir)/src/libsma.la
big_reduction_SOURCES = big_reduction.c
big_reduction_LDADD = $(top_builddir)/src/libsma.la
strided_put_SOURCES = strided_put.c
strided_put_LDADD = $(top_builddir)/src/libsma.la
barrier_SOURCES = barrier.c
barrier_LDADD = $(top_builddir)/src/libsma.la
put1_SOURCES = put1.c
put1_LDADD = $(top_builddir)/src/libsma.la
get1_SOURCES = get1.c
get1_LDADD = $(top_builddir)/src/libsma.la
swap1_SOURCES = swap1.c
swap1_LDADD = $(top_builddir)/src/libsma.la
ping_SOURCES = ping.c
ping_LDADD = $(top_builddir)/src/libsma.la
pingpong_SOURCES = pingpong.c
pingpong_LDADD = $(top_builddir)/src/libsma.la
iput32_SOURCES = iput32.c
iput32_LDADD = $(top_builddir)/src/libsma.la
iput64_SOURCES = iput64.c
iput64_LDADD = $(top_builddir)/src/libsma.la
iput128_SOURCES = iput128.c
iput128_LDADD = $(top_builddir)/src/libsma.la
iput_short_SOURCES = iput_short.c
iput_short_LDADD = $(top_builddir)/src/libsma.la
iput_double_SOURCES = iput_double.c
iput_double_LDADD = $(top_builddir)/src/libsma.la
iput_float_SOURCES = iput_float.c
iput_float_LDADD = $(top_builddir)/src/libsma.la
iput_long_SOURCES = iput_long.c
iput_long_LDADD = $(top_builddir)/src/libsma.la
iput_longdouble_SOURCES = iput_longdouble.c
iput_longdouble_LDADD = $(top_builddir)/src/libsma.la
iput_longlong_SOURCES = iput_longlong.c
iput_longlong_LDADD = $(top_builddir)/src/libsma.la
sping_SOURCES = sping.c
sping_LDADD = $(top_builddir)/src/libsma.la
pingpong_short_SOURCES = pingpong-short.c
pingpong_short_LDADD = $(top_builddir)/src/libsma.la
iput_iget_SOURCES = iput-iget.c
iput_iget_LDADD = $(top_builddir)/src/libsma.la
ipgm_SOURCES = ipgm.c
ipgm_LDADD = $(top_builddir)/src/libsma.la
shmalloc_SOURCES = shmalloc.c
shmalloc_LDADD = $(top_builddir)/src/libsma.la
shrealloc_SOURCES = shrealloc.c
shrealloc_LDADD = $(top_builddir)/src/libsma.la
shmemalign_SOURCES = shmemalign.c
shmemalign_LDADD = $(top_builddir)/src/libsma.la
shmemlatency_SOURCES = shmemlatency.c
shmemlatency_LDADD = $(top_builddir)/src/libsma.la
get_g_SOURCES = get_g.c
get_g_LDADD = $(top_builddir)/src/libsma.la
swapm_SOURCES = swapm.c
swapm_LDADD = $(top_builddir)/src/libsma.la
cswap_SOURCES = cswap.c
cswap_LDADD = $(top_builddir)/src/libsma.la
waituntil_SOURCES = waituntil.c
waituntil_LDADD = $(top_builddir)/src/libsma.la
atomic_inc_SOURCES = atomic_inc.c
atomic_inc_LDADD = $(top_builddir)/src/libsma.la
set_lock_SOURCES = set_lock.c
set_lock_LDADD = $(top_builddir)/src/libsma.la
test_lock_SOURCES = test_lock.c
test_lock_LDADD = $(top_builddir)/src/libsma.la
msgrate_SOURCES = msgrate.c
msgrate_LDADD = $(top_builddir)/src/libsma.la
NPshmem_SOURCES = netpipe/netpipe.c netpipe/netpipe.h netpipe/shmem.c
NPshmem_CPPFLAGS = -DSHMEM
NPshmem_LDADD = $(top_builddir)/src/libsma.la
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
netpipe/$(am__dirstamp):
	@$(MKDIR_P) netpipe
	@: > netpipe/$(am__dirstamp)
netpipe/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) netpipe/$(DEPDIR)
	@: > netpipe/$(DEPDIR)/$(am__dirstamp)
netpipe/NPshmem-netpipe.$(OBJEXT): netpipe/$(am__dirstamp) \
	netpipe/$(DEPDIR)/$(am__dirstamp)
netpipe/NPshmem-shmem.$(OBJEXT): netpipe/$(am__dirstamp) \
	netpipe/$(DEPDIR)/$(am__dirstamp)
NPshmem$(EXEEXT): $(NPshmem_OBJECTS) $(NPshmem_DEPENDENCIES) 
	@rm -f NPshmem$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(NPshmem_OBJECTS) $(NPshmem_LDADD) $(LIBS)
accessible_ping$(EXEEXT): $(accessible_ping_OBJECTS) $(accessible_ping_DEPENDENCIES) 
	@rm -f accessible_ping$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(accessible_ping_OBJECTS) $(accessible_ping_LDADD) $(LIBS)
atomic_inc$(EXEEXT): $(atomic_inc_OBJECTS) $(atomic_inc_DEPENDENCIES) 
	@rm -f atomic_inc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(atomic_inc_OBJECTS) $(atomic_inc_LDADD) $(LIBS)
barrier$(EXEEXT): $(barrier_OBJECTS) $(barrier_DEPENDENCIES) 
	@rm -f barrier$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(barrier_OBJECTS) $(barrier_LDADD) $(LIBS)
big_reduction$(EXEEXT): $(big_reduction_OBJECTS) $(big_reduction_DEPENDENCIES) 
	@rm -f big_reduction$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(big_reduction_OBJECTS) $(big_reduction_LDADD) $(LIBS)
circular_shift$(EXEEXT): $(circular_shift_OBJECTS) $(circular_shift_DEPENDENCIES) 
	@rm -f circular_shift$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(circular_shift_OBJECTS) $(circular_shift_LDADD) $(LIBS)
cswap$(EXEEXT): $(cswap_OBJECTS) $(cswap_DEPENDENCIES) 
	@rm -f cswap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cswap_OBJECTS) $(cswap_LDADD) $(LIBS)
get1$(EXEEXT): $(get1_OBJECTS) $(get1_DEPENDENCIES) 
	@rm -f get1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get1_OBJECTS) $(get1_LDADD) $(LIBS)
get_g$(EXEEXT): $(get_g_OBJECTS) $(get_g_DEPENDENCIES) 
	@rm -f get_g$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_g_OBJECTS) $(get_g_LDADD) $(LIBS)
hello$(EXEEXT): $(hello_OBJECTS) $(hello_DEPENDENCIES) 
	@rm -f hello$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hello_OBJECTS) $(hello_LDADD) $(LIBS)
ipgm$(EXEEXT): $(ipgm_OBJECTS) $(ipgm_DEPENDENCIES) 
	@rm -f ipgm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ipgm_OBJECTS) $(ipgm_LDADD) $(LIBS)
iput-iget$(EXEEXT): $(iput_iget_OBJECTS) $(iput_iget_DEPENDENCIES) 
	@rm -f iput-iget$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iput_iget_OBJECTS) $(iput_iget_LDADD) $(LIBS)
iput128$(EXEEXT): $(iput128_OBJECTS) $(iput128_DEPENDENCIES) 
	@rm -f iput128$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iput128_OBJECTS) $(iput128_LDADD) $(LIBS)
iput32$(EXEEXT): $(iput32_OBJECTS) $(iput32_DEPENDENCIES) 
	@rm -f iput32$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iput32_OBJECTS) $(iput32_LDADD) $(LIBS)
iput64$(EXEEXT): $(iput64_OBJECTS) $(iput64_DEPENDENCIES) 
	@rm -f iput64$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iput64_OBJECTS) $(iput64_LDADD) $(LIBS)
iput_double$(EXEEXT): $(iput_double_OBJECTS) $(iput_double_DEPENDENCIES) 
	@rm -f iput_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iput_double_OBJECTS) $(iput_double_LDADD) $(LIBS)
iput_float$(EXEEXT): $(iput_float_OBJECTS) $(iput_float_DEPENDENCIES) 
	@rm -f iput_float$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iput_float_OBJECTS) $(iput_float_LDADD) $(LIBS)
iput_long$(EXEEXT): $(iput_long_OBJECTS) $(iput_long_DEPENDENCIES) 
	@rm -f iput_long$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iput_long_OBJECTS) $(iput_long_LDADD) $(LIBS)
iput_longdouble$(EXEEXT): $(iput_longdouble_OBJECTS) $(iput_longdouble_DEPENDENCIES) 
	@rm -f iput_longdouble$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iput_longdouble_OBJECTS) $(iput_longdouble_LDADD) $(LIBS)
iput_longlong$(EXEEXT): $(iput_longlong_OBJECTS) $(iput_longlong_DEPENDENCIES) 
	@rm -f iput_longlong$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iput_longlong_OBJECTS) $(iput_longlong_LDADD) $(LIBS)
iput_short$(EXEEXT): $(iput_short_OBJECTS) $(iput_short_DEPENDENCIES) 
	@rm -f iput_short$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iput_short_OBJECTS) $(iput_short_LDADD) $(LIBS)
max_reduction$(EXEEXT): $(max_reduction_OBJECTS) $(max_reduction_DEPENDENCIES) 
	@rm -f max_reduction$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(max_reduction_OBJECTS) $(max_reduction_LDADD) $(LIBS)
msgrate$(EXEEXT): $(msgrate_OBJECTS) $(msgrate_DEPENDENCIES) 
	@rm -f msgrate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(msgrate_OBJECTS) $(msgrate_LDADD) $(LIBS)
ping$(EXEEXT): $(ping_OBJECTS) $(ping_DEPENDENCIES) 
	@rm -f ping$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ping_OBJECTS) $(ping_LDADD) $(LIBS)
pingpong$(EXEEXT): $(pingpong_OBJECTS) $(pingpong_DEPENDENCIES) 
	@rm -f pingpong$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pingpong_OBJECTS) $(pingpong_LDADD) $(LIBS)
pingpong-short$(EXEEXT): $(pingpong_short_OBJECTS) $(pingpong_short_DEPENDENCIES) 
	@rm -f pingpong-short$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pingpong_short_OBJECTS) $(pingpong_short_LDADD) $(LIBS)
put1$(EXEEXT): $(put1_OBJECTS) $(put1_DEPENDENCIES) 
	@rm -f put1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(put1_OBJECTS) $(put1_LDADD) $(LIBS)
set_lock$(EXEEXT): $(set_lock_OBJECTS) $(set_lock_DEPENDENCIES) 
	@rm -f set_lock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(set_lock_OBJECTS) $(set_lock_LDADD) $(LIBS)
shmalloc$(EXEEXT): $(shmalloc_OBJECTS) $(shmalloc_DEPENDENCIES) 
	@rm -f shmalloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shmalloc_OBJECTS) $(shmalloc_LDADD) $(LIBS)
shmemalign$(EXEEXT): $(shmemalign_OBJECTS) $(shmemalign_DEPENDENCIES) 
	@rm -f shmemalign$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shmemalign_OBJECTS) $(shmemalign_LDADD) $(LIBS)
shmemlatency$(EXEEXT): $(shmemlatency_OBJECTS) $(shmemlatency_DEPENDENCIES) 
	@rm -f shmemlatency$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shmemlatency_OBJECTS) $(shmemlatency_LDADD) $(LIBS)
shrealloc$(EXEEXT): $(shrealloc_OBJECTS) $(shrealloc_DEPENDENCIES) 
	@rm -f shrealloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shrealloc_OBJECTS) $(shrealloc_LDADD) $(LIBS)
sping$(EXEEXT): $(sping_OBJECTS) $(sping_DEPENDENCIES) 
	@rm -f sping$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sping_OBJECTS) $(sping_LDADD) $(LIBS)
strided_put$(EXEEXT): $(strided_put_OBJECTS) $(strided_put_DEPENDENCIES) 
	@rm -f strided_put$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strided_put_OBJECTS) $(strided_put_LDADD) $(LIBS)
swap1$(EXEEXT): $(swap1_OBJECTS) $(swap1_DEPENDENCIES) 
	@rm -f swap1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(swap1_OBJECTS) $(swap1_LDADD) $(LIBS)
swapm$(EXEEXT): $(swapm_OBJECTS) $(swapm_DEPENDENCIES) 
	@rm -f swapm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(swapm_OBJECTS) $(swapm_LDADD) $(LIBS)
test_lock$(EXEEXT): $(test_lock_OBJECTS) $(test_lock_DEPENDENCIES) 
	@rm -f test_lock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_lock_OBJECTS) $(test_lock_LDADD) $(LIBS)
waituntil$(EXEEXT): $(waituntil_OBJECTS) $(waituntil_DEPENDENCIES) 
	@rm -f waituntil$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(waituntil_OBJECTS) $(waituntil_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f netpipe/NPshmem-netpipe.$(OBJEXT)
	-rm -f netpipe/NPshmem-shmem.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/accessible_ping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atomic_inc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barrier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/big_reduction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/circular_shift.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cswap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get_g.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hello.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ipgm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iput-iget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iput128.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iput32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iput64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iput_double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iput_float.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iput_long.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iput_longdouble.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iput_longlong.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iput_short.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/max_reduction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/msgrate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pingpong-short.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pingpong.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/put1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_lock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shmalloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shmemalign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shmemlatency.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shrealloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strided_put.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swap1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swapm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_lock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/waituntil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@netpipe/$(DEPDIR)/NPshmem-netpipe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@netpipe/$(DEPDIR)/NPshmem-shmem.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

netpipe/NPshmem-netpipe.o: netpipe/netpipe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(NPshmem_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT netpipe/NPshmem-netpipe.o -MD -MP -MF netpipe/$(DEPDIR)/NPshmem-netpipe.Tpo -c -o netpipe/NPshmem-netpipe.o `test -f 'netpipe/netpipe.c' || echo '$(srcdir)/'`netpipe/netpipe.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) netpipe/$(DEPDIR)/NPshmem-netpipe.Tpo netpipe/$(DEPDIR)/NPshmem-netpipe.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='netpipe/netpipe.c' object='netpipe/NPshmem-netpipe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(NPshmem_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o netpipe/NPshmem-netpipe.o `test -f 'netpipe/netpipe.c' || echo '$(srcdir)/'`netpipe/netpipe.c

netpipe/NPshmem-netpipe.obj: netpipe/netpipe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(NPshmem_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT netpipe/NPshmem-netpipe.obj -MD -MP -MF netpipe/$(DEPDIR)/NPshmem-netpipe.Tpo -c -o netpipe/NPshmem-netpipe.obj `if test -f 'netpipe/netpipe.c'; then $(CYGPATH_W) 'netpipe/netpipe.c'; else $(CYGPATH_W) '$(srcdir)/netpipe/netpipe.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) netpipe/$(DEPDIR)/NPshmem-netpipe.Tpo netpipe/$(DEPDIR)/NPshmem-netpipe.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='netpipe/netpipe.c' object='netpipe/NPshmem-netpipe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(NPshmem_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o netpipe/NPshmem-netpipe.obj `if test -f 'netpipe/netpipe.c'; then $(CYGPATH_W) 'netpipe/netpipe.c'; else $(CYGPATH_W) '$(srcdir)/netpipe/netpipe.c'; fi`

netpipe/NPshmem-shmem.o: netpipe/shmem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(NPshmem_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT netpipe/NPshmem-shmem.o -MD -MP -MF netpipe/$(DEPDIR)/NPshmem-shmem.Tpo -c -o netpipe/NPshmem-shmem.o `test -f 'netpipe/shmem.c' || echo '$(srcdir)/'`netpipe/shmem.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) netpipe/$(DEPDIR)/NPshmem-shmem.Tpo netpipe/$(DEPDIR)/NPshmem-shmem.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='netpipe/shmem.c' object='netpipe/NPshmem-shmem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(NPshmem_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o netpipe/NPshmem-shmem.o `test -f 'netpipe/shmem.c' || echo '$(srcdir)/'`netpipe/shmem.c

netpipe/NPshmem-shmem.obj: netpipe/shmem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(NPshmem_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT netpipe/NPshmem-shmem.obj -MD -MP -MF netpipe/$(DEPDIR)/NPshmem-shmem.Tpo -c -o netpipe/NPshmem-shmem.obj `if test -f 'netpipe/shmem.c'; then $(CYGPATH_W) 'netpipe/shmem.c'; else $(CYGPATH_W) '$(srcdir)/netpipe/shmem.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) netpipe/$(DEPDIR)/NPshmem-shmem.Tpo netpipe/$(DEPDIR)/NPshmem-shmem.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='netpipe/shmem.c' object='netpipe/NPshmem-shmem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(NPshmem_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o netpipe/NPshmem-shmem.obj `if test -f 'netpipe/shmem.c'; then $(CYGPATH_W) 'netpipe/shmem.c'; else $(CYGPATH_W) '$(srcdir)/netpipe/shmem.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f netpipe/$(DEPDIR)/$(am__dirstamp)
	-rm -f netpipe/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) netpipe/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) netpipe/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


PROCS ?= 2
HOSTFILE ?= $(top_srcdir)/test/hostfile

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
